{"version":3,"file":"static/js/cast.64bcfe99.chunk.js","mappings":"2OAKe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAAXD,OACN,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAsBN,GAAQO,MAAK,SAAAC,GACjCC,QAAQC,IAAIF,EAAEL,MACdC,EAAQI,EAAEL,WAEX,CAACH,KAGF,iCACE,SAAC,KAAD,oBACA,SAAC,KAAD,UACGG,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,0BACGF,GACC,gBAAKG,IAAG,yCAAoCH,GAAgBI,IAAK,CAAEH,KAAAA,MAEnE,gBACEE,IAAK,sDACLC,IAAK,YACLC,MAAO,OAGX,uCAAeH,MACf,uBAAID,MAXGF,a,2JCpBNO,EAAQC,EAAAA,GAAAA,GAAH,oEAILC,EAAWD,EAAAA,GAAAA,GAAH,wRAYRE,EAAaF,EAAAA,GAAAA,GAAH,sBACVG,EAAaH,EAAAA,GAAAA,GAAH,sG,2HCbR,SAASI,IACtB,IAAMxB,GAAWC,EAAAA,EAAAA,MAAXD,OACN,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOuB,EAAP,KAAgBC,EAAhB,KASA,OAPArB,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAsBN,GAAQO,MAAK,SAAAC,GACjCC,QAAQC,IAAIF,EAAEmB,SACdD,EAAWlB,EAAEmB,cAEd,CAAC3B,KAGF,iCACE,SAAC,KAAD,uBACA,SAAC,KAAD,UACqB,IAAlByB,EAAQG,MACPH,EAAQd,KAAI,gBAAGC,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,QAAd,OACV,UAAC,KAAD,YACE,mCAAWD,MACX,uBAAIC,MAFWlB,OAMnB,4D,oLC5BJmB,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAE6BD,EAASE,OAFtC,gDAE+CC,QAAQC,OAAO,IAAIC,MAAM,cAFxE,2GAKO,SAASC,IACd,OAAOV,EAAuB,GAAD,OAAID,EAAJ,uCAA2CD,IAInE,SAASa,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OAAID,EAAJ,kBAAsBa,EAAtB,oBAAyCd,IAGjE,SAASe,EAAkBD,GAChC,OAAOZ,EAAuB,GAAD,OAAID,EAAJ,kBAAsBa,EAAtB,4BAAiDd,IAGzE,SAASgB,EAAkBF,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACqBd,EADrB,2BAKxB,SAASiB,EAAoBC,GAClC,OAAOhB,EAAuB,GAAD,OACxBD,EADwB,+BACOiB,EADP,oBACwBlB,EADxB","sources":["components/Cast/Cast.jsx","components/Cast/Cast.styled.jsx","components/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import { Title, CastList } from './Cast.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../services/Api';\n\nexport default function Cast() {\n  let { filmId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    API.FetchFilmsCredits(filmId).then(r => {\n      console.log(r.cast);\n      setCast(r.cast);\n    });\n  }, [filmId]);\n\n  return (\n    <>\n      <Title>Cast</Title>\n      <CastList>\n        {cast.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            {profile_path ? (\n              <img src={`https://image.tmdb.org/t/p/w300${profile_path}`} alt={{ name }} />\n            ) : (\n              <img\n                src={'../../images/blank-profile-picture-973461__340.webp'}\n                alt={'No poster'}\n                width={300}\n              />\n            )}\n            <p>Character: {character}</p>\n            <p>{name}</p>\n          </li>\n        ))}\n      </CastList>\n    </>\n  );\n}\n","import styled from 'styled-components';\nexport const Title = styled.h5`\n  margin-bottom: 20px;\n  font-size: 22px;\n`;\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const ReviewList = styled.ul``;\nexport const ReviewItem = styled.li`\n  margin-bottom: 16px;\n  list-style-position: inside;\n  list-style: none;\n`;\n","import { Title, ReviewList, ReviewItem } from '../Cast/Cast.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../services/Api';\n\nexport default function Reviews() {\n  let { filmId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    API.FetchFilmsReviews(filmId).then(r => {\n      console.log(r.results);\n      setReviews(r.results);\n    });\n  }, [filmId]);\n\n  return (\n    <>\n      <Title>Reviews</Title>\n      <ReviewList>\n        {reviews.lengs !== 0 ? (\n          reviews.map(({ id, autor, content }) => (\n            <ReviewItem key={id}>\n              <p>Autor: {autor}</p>\n              <p>{content}</p>\n            </ReviewItem>\n          ))\n        ) : (\n          <p>We hevent had reviews yet</p>\n        )}\n      </ReviewList>\n    </>\n  );\n}\n","const API_KEY = 'bffba07cef2d165abd193feceb46d279';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok ? await response.json() : Promise.reject(new Error('Not found'));\n}\n\nexport function FetchTrendingFilms() {\n  return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  // https://api.themoviedb.org/3/trending/movie/day?api_key=bffba07cef2d165abd193feceb46d279\n}\n\nexport function FetchFilmsDetails(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  // https://api.themoviedb.org/3/movie/{movie_id}?api_key=bffba07cef2d165abd193feceb46d279&language=en-US\n}\nexport function FetchFilmsCredits(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=bffba07cef2d165abd193feceb46d279&language=en-US\n}\nexport function FetchFilmsReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=bffba07cef2d165abd193feceb46d279&language=en-US&page=1\n}\nexport function FetchSearchingFilms(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false`,\n  );\n  // https://api.themoviedb.org/3/search/movie?api_key=bffba07cef2d165abd193feceb46d279&language=en-US&page=1&include_adult=false\n}\n"],"names":["Cast","filmId","useParams","useState","cast","setCast","useEffect","API","then","r","console","log","map","id","profile_path","name","character","src","alt","width","Title","styled","CastList","ReviewList","ReviewItem","Reviews","reviews","setReviews","results","lengs","autor","content","API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","FetchTrendingFilms","FetchFilmsDetails","movieId","FetchFilmsCredits","FetchFilmsReviews","FetchSearchingFilms","query"],"sourceRoot":""}